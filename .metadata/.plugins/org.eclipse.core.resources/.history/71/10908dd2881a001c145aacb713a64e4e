package plugin;

import com.puppycrawl.tools.checkstyle.api.AbstractCheck;
import com.puppycrawl.tools.checkstyle.api.DetailAST;
import com.puppycrawl.tools.checkstyle.api.TokenTypes;

public class MethodLimitCheck extends AbstractCheck {

    private int max = 30;

    public void setMax(int limit) {
        max = limit;
    }
    
    @Override
    public void visitToken(DetailAST ast) {
        DetailAST objBlock = ast.findFirstToken(TokenTypes.OBJBLOCK);
        int methodDefs = objBlock.getChildCount(TokenTypes.METHOD_DEF);
        if (methodDefs > max) {
            log(ast.getLineNo(), "methodlimit", max);
        }
    }


    @Override
    public int[] getRequiredTokens() {
      return new int[0];
    }

    @Override
    public int[] getAcceptableTokens() {
      return new int[] { TokenTypes.CLASS_DEF, TokenTypes.INTERFACE_DEF };
    }

    @Override
    public int[] getDefaultTokens() {
      return new int[] { TokenTypes.CLASS_DEF, TokenTypes.INTERFACE_DEF };
    }


}
